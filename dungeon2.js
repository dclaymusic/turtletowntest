//build the map and place character
let lastDungeon2WaterSound = 1;
let bgDungeon2LoopTriggered = false;

let possibleDungeon2SwitchPositions = [
    [[20,88],[16,81]],
    [[16,85],[16,82]],
    [[8,88],[16,83]],
    [[12,81],[15,83]],
    [[8,74],[14,83]],
    [[16,79],[14,82]],
    [[16,75],[14,81]],
    [[20,77],[14,80]]
];


let toggledTileList = [
    [7,75],
    [6,80],
    [6,84],
    [11,77],
    [12,84],
    [17,77],
    [21,75],
    [22,82],
    [18,85]
];

let dungeon2SwitchPositions = pickFromArray(possibleDungeon2SwitchPositions,4);

function buildDungeon2(currentFrameTime)
{
	let thisMapW = 30;
	let thisMapH = 140;

    mapW = thisMapW;
	mapH = thisMapH;


    gameMap = [350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,372,372,371,369,369,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,350,350,350,350,350,350,350,372,350,351,369,369,370,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,357,351,350,350,350,350,373,372,350,372,350,351,369,369,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,355,351,350,350,350,350,350,372,350,372,350,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,355,351,350,350,350,350,350,372,372,372,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,355,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,356,356,356,356,356,355,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,356,356,356,356,356,356,356,355,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,355,351,351,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,355,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,356,356,356,356,356,356,356,355,351,350,350,350,350,350,351,351,351,350,350,350,350,350,350,350,350,350,350,350,351,351,355,351,351,351,351,351,351,351,351,350,350,350,350,351,351,359,351,351,351,351,350,350,350,350,350,350,350,350,351,351,355,351,351,351,351,351,351,351,351,351,351,351,351,351,359,359,359,359,351,351,351,351,350,350,350,350,350,350,351,351,355,351,351,351,351,351,351,359,359,359,359,359,359,359,359,359,359,359,359,359,359,351,351,350,350,350,350,351,351,351,355,357,357,357,357,357,357,357,357,359,359,359,359,356,356,356,356,356,356,356,358,359,351,350,350,350,351,351,359,359,359,359,359,359,359,359,359,359,355,359,359,359,359,355,359,359,359,359,359,359,358,359,351,350,350,351,351,359,359,359,359,359,359,359,359,359,359,359,355,359,359,359,359,355,359,359,359,359,359,359,358,359,351,350,351,351,359,358,357,357,357,357,357,357,357,359,359,359,355,359,359,359,359,355,359,359,359,359,359,359,358,359,351,350,351,359,359,358,359,359,359,359,359,359,355,359,359,359,355,359,359,359,351,355,351,359,359,359,359,359,358,359,351,350,351,359,359,358,359,359,359,359,359,359,355,359,359,359,355,359,359,351,351,355,351,351,359,359,359,359,358,359,351,350,351,359,359,358,359,359,359,359,359,359,355,359,359,359,355,357,357,353,381,355,381,353,357,357,357,357,357,359,351,350,351,359,359,358,359,359,359,359,359,359,355,359,359,359,359,359,359,351,351,355,351,351,359,359,359,359,359,351,351,350,351,351,359,358,359,359,359,359,351,351,355,351,351,359,359,359,359,359,351,355,351,359,359,359,359,351,351,351,350,350,350,351,359,356,356,356,356,356,353,381,355,381,353,356,356,356,356,356,356,355,359,359,359,359,351,351,350,350,350,350,350,350,351,359,359,359,359,359,351,351,355,351,351,359,359,359,359,359,359,359,359,359,359,351,351,351,351,350,350,350,350,350,351,359,359,359,351,351,351,351,355,359,359,359,359,359,359,359,359,359,359,359,359,359,351,351,351,350,350,350,350,350,350,351,351,351,351,351,351,351,355,359,359,351,351,351,351,359,359,359,359,359,359,359,359,359,351,351,350,350,350,350,350,351,351,359,359,359,351,351,353,351,351,351,358,357,357,357,357,357,357,357,357,357,357,357,359,351,350,350,350,350,351,351,359,359,359,359,359,351,381,351,351,351,358,351,351,351,359,359,359,359,359,359,359,355,359,351,351,350,350,350,351,359,358,357,357,357,357,357,357,357,353,381,358,381,353,357,357,357,357,359,359,359,359,355,359,359,351,350,350,351,351,359,358,359,359,359,359,351,381,351,351,351,358,351,351,359,359,359,355,359,359,359,359,355,359,359,351,350,350,351,359,359,358,359,359,359,359,351,353,351,351,359,358,351,351,359,359,359,355,359,359,359,359,355,359,351,351,350,350,351,359,359,358,359,359,359,359,351,355,351,359,359,358,359,359,359,359,359,355,359,359,359,359,355,359,351,351,350,350,351,351,359,358,359,359,359,359,359,355,359,359,359,358,359,359,359,359,359,355,359,359,359,359,355,359,351,351,350,350,350,351,359,358,359,359,359,359,359,355,359,359,359,358,359,359,359,359,359,355,359,359,359,359,355,359,351,350,350,350,350,351,359,358,359,359,359,359,359,355,359,359,359,358,359,359,359,359,359,355,359,359,359,359,355,359,351,350,350,350,351,351,359,358,359,359,359,359,359,355,359,359,359,358,359,359,359,359,359,355,359,359,359,359,355,351,351,350,350,350,351,351,359,356,356,356,356,356,356,355,359,359,359,356,356,356,356,356,356,355,359,359,359,351,355,351,351,350,350,350,350,351,351,359,359,359,359,359,359,359,351,351,359,359,359,359,359,359,359,359,351,351,351,351,355,351,351,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,351,355,351,351,350,350,350,350,350,351,358,357,357,357,357,357,357,357,357,357,357,351,351,351,351,351,351,351,351,351,351,355,351,351,350,350,350,350,350,351,358,351,351,351,351,351,351,351,351,351,355,351,351,351,359,359,359,351,351,351,351,355,351,351,351,350,350,350,350,351,358,351,351,351,351,359,351,351,351,351,355,351,351,359,359,359,359,359,351,351,351,355,351,351,351,350,350,350,350,351,358,351,351,359,359,359,359,359,351,351,355,351,359,359,359,359,359,359,351,351,351,355,351,351,350,350,350,350,351,351,358,351,359,359,359,359,359,359,359,351,355,351,359,359,359,359,359,359,359,351,351,355,351,351,350,350,350,351,351,351,358,351,359,359,359,359,359,359,359,351,355,351,359,359,359,359,359,359,359,351,351,355,351,351,350,350,350,351,351,351,358,351,359,359,359,359,359,359,359,351,355,351,351,359,359,359,359,359,359,351,351,355,351,350,350,350,350,351,351,351,358,351,359,359,359,359,359,359,351,351,355,351,351,359,359,359,359,359,359,351,351,355,351,350,350,350,350,350,351,351,358,351,359,359,359,359,359,359,351,351,355,351,351,351,359,359,359,359,351,351,351,355,351,350,350,350,350,350,351,351,358,351,359,359,359,359,359,359,351,351,355,351,351,351,359,359,359,359,351,351,351,355,351,351,350,350,350,350,351,351,358,351,351,359,359,359,351,351,351,351,355,351,351,351,351,351,351,351,351,351,351,355,351,351,350,350,350,350,351,351,358,351,351,351,351,351,351,351,351,351,355,351,351,351,351,351,351,351,351,351,351,355,351,351,350,350,350,350,351,351,356,356,356,356,356,356,356,356,353,381,355,381,353,356,356,356,356,356,356,356,356,355,351,351,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,351,355,351,351,351,351,351,351,351,351,351,351,351,351,350,350,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,355,351,351,351,350,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,351,351,350,350,351,351,351,351,351,350,355,350,350,350,350,350,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,350,350,350,355,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,355,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,355,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,355,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,355,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,355,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,352,352,355,352,352,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,352,387,369,389,352,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,352,388,369,390,352,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,352,390,369,388,352,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,352,389,369,387,352,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,352,352,369,352,352,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,351,351,351,353,351,351,351,351,351,350,350,351,351,351,351,350,350,350,350,350,350,351,351,352,352,352,352,352,352,351,352,352,351,351,351,351,352,352,352,351,351,351,352,352,351,350,350,350,350,350,351,351,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,351,351,350,350,350,350,351,352,352,352,352,365,366,365,366,365,352,365,366,365,352,365,366,365,352,365,366,365,352,352,352,351,350,350,350,350,351,352,352,352,352,368,352,352,352,368,352,368,352,368,367,368,352,368,352,368,352,368,352,352,351,351,350,350,350,350,351,352,352,352,352,365,352,365,352,365,352,365,352,365,352,365,352,365,352,365,352,365,352,352,351,351,350,350,350,350,351,351,352,352,352,368,352,368,352,368,367,368,352,368,352,368,352,368,367,368,352,368,352,352,352,351,351,350,350,350,350,351,351,352,352,365,352,365,352,365,352,352,352,365,352,352,352,365,352,352,352,365,352,352,352,352,351,350,350,350,350,351,351,352,352,368,352,368,367,368,352,368,367,368,367,368,352,368,367,368,352,368,352,352,352,352,351,350,350,350,350,351,352,352,352,365,352,352,352,352,352,365,352,352,352,365,352,352,352,352,352,365,352,352,352,352,351,350,350,350,350,351,352,352,352,368,367,368,367,368,352,368,352,353,352,368,352,368,367,368,367,368,352,352,352,351,351,350,350,350,350,351,351,352,352,352,352,352,352,365,352,352,352,365,352,352,352,352,352,352,352,365,352,352,352,351,350,350,350,350,350,351,351,352,352,368,367,368,367,368,352,368,352,368,352,368,367,368,367,368,367,368,352,352,351,351,350,350,350,350,350,351,352,352,352,365,352,352,352,352,352,365,352,365,352,365,352,352,352,352,352,352,352,352,351,351,350,350,350,350,351,351,352,352,352,368,367,368,367,368,367,368,352,368,367,368,352,368,367,368,367,368,352,352,351,351,350,350,350,350,351,352,352,352,352,352,352,352,352,365,352,352,352,352,352,352,352,365,352,365,352,365,352,352,352,351,350,350,350,350,351,352,352,352,352,368,367,368,352,368,352,368,367,368,352,368,352,352,352,368,352,368,352,352,352,351,351,350,350,350,351,351,352,352,352,365,352,365,366,365,352,365,352,365,352,365,366,365,366,365,352,365,352,352,352,352,351,350,350,350,350,351,352,352,352,368,352,352,352,368,352,368,352,368,352,352,352,368,352,352,352,368,352,352,352,352,351,350,350,350,350,351,351,352,352,365,366,365,352,365,366,365,352,365,366,365,366,365,352,365,366,365,352,352,352,351,351,350,350,350,350,351,351,351,352,352,352,352,352,352,352,352,352,355,352,352,352,352,352,352,352,352,352,352,352,351,350,350,350,350,350,350,351,351,351,351,351,351,351,352,352,351,351,355,351,351,351,351,351,351,351,351,352,352,351,351,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,351,351,355,351,351,351,351,359,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,351,359,351,376,376,376,375,376,376,376,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,376,374,375,374,375,374,376,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,376,375,374,375,374,375,376,351,351,359,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,359,351,351,376,374,375,374,375,374,376,351,359,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,359,351,376,363,364,363,364,363,376,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,376,364,363,364,363,364,376,351,351,359,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,359,351,351,351,376,363,364,363,364,363,376,351,359,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,376,364,363,364,363,364,376,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,359,351,376,363,364,363,364,363,376,351,351,351,359,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,359,351,351,376,364,363,364,363,364,376,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,376,363,364,363,364,363,376,351,359,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,376,364,363,364,363,364,376,351,351,359,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,359,351,376,376,376,355,376,376,376,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,359,351,351,351,351,358,358,355,357,357,351,351,359,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,359,351,351,358,358,351,358,351,355,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,351,351,351,351,358,358,351,351,358,351,355,357,357,351,351,351,351,350,350,350,350,350,350,350,350,350,350,351,351,351,351,351,351,358,358,351,351,358,358,351,358,351,355,357,357,351,351,351,351,350,350,350,350,350,350,350,351,351,351,351,358,358,358,358,351,351,351,358,352,351,358,351,352,352,355,357,357,357,351,351,351,351,350,350,350,350,351,351,358,358,358,352,352,352,352,358,358,358,352,352,358,358,358,352,352,352,352,355,357,357,351,351,350,350,350,350,351,351,358,352,352,352,352,352,352,358,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,351,350,350,350,350,351,351,354,357,357,357,357,357,357,354,357,357,357,357,357,357,354,356,356,356,356,356,356,354,352,351,350,350,350,350,351,352,358,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,352,352,352,352,352,358,352,351,351,350,350,350,351,352,358,352,352,359,351,351,352,358,352,351,351,359,352,352,355,352,352,351,351,359,352,358,352,351,351,350,350,350,351,352,358,352,359,351,351,351,352,358,352,351,359,351,351,352,355,352,351,359,351,351,352,358,352,352,351,350,350,350,351,352,358,352,351,351,359,352,352,358,352,351,351,351,359,352,355,352,351,351,359,351,352,358,352,352,351,350,350,350,351,352,358,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,352,352,352,352,352,358,352,352,351,350,350,351,351,352,354,356,356,356,356,356,356,354,357,357,357,357,357,357,354,356,356,356,356,356,356,354,352,351,351,350,350,351,352,352,355,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,352,352,352,352,352,358,352,351,351,350,350,351,352,352,355,352,352,351,351,359,352,358,352,351,351,351,359,352,355,352,351,351,351,359,352,358,352,351,351,350,350,351,352,352,355,352,359,351,351,351,352,358,352,351,359,351,351,352,355,352,359,351,351,351,352,358,352,352,351,350,350,351,352,352,355,352,351,351,359,351,352,358,352,359,351,351,352,352,355,352,351,351,359,352,352,358,352,352,351,350,350,351,352,352,355,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,352,352,352,352,352,358,352,352,351,350,350,351,351,352,354,356,356,356,356,356,356,354,356,356,356,356,356,356,354,357,357,357,357,357,357,354,352,352,351,350,350,351,351,352,355,352,352,352,352,352,352,355,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,352,351,350,350,351,351,352,355,352,351,351,359,351,352,355,352,351,359,351,352,352,358,352,359,351,351,351,352,355,352,352,351,350,350,350,351,352,355,352,351,351,351,359,352,355,352,351,351,351,359,352,358,352,351,351,351,359,352,355,352,351,351,350,350,350,351,352,355,352,352,359,351,351,352,355,352,352,351,359,351,352,358,352,352,351,359,351,352,355,352,351,351,350,350,350,351,352,355,352,352,352,352,352,352,355,352,352,352,352,352,352,358,352,352,352,352,352,352,355,352,351,351,350,350,350,351,352,354,357,357,357,357,357,357,354,356,356,356,356,356,356,354,356,356,356,356,356,356,354,351,351,351,350,350,351,351,351,355,352,352,352,352,352,352,355,352,352,352,352,352,352,355,352,352,352,352,352,352,355,351,351,351,350,350,351,351,351,355,352,352,352,352,352,351,355,352,352,352,352,352,351,355,351,351,351,351,358,358,355,351,351,351,350,350,351,351,351,358,358,351,351,351,351,351,355,351,351,351,352,351,351,358,351,351,358,358,358,351,351,351,351,351,350,350,351,351,351,351,358,351,351,351,351,356,355,351,351,351,351,351,358,358,358,358,358,351,351,351,351,351,351,350,350,350,350,351,351,351,358,358,351,351,356,355,351,351,351,358,358,358,358,351,351,351,351,351,351,351,351,351,351,350,350,350,350,350,351,351,351,358,351,351,355,351,351,351,358,358,351,351,351,351,351,351,351,351,351,351,351,351,350,350,350,350,350,350,350,351,351,358,358,356,355,358,358,358,358,351,351,351,351,351,351,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,351,351,351,391,351,351,351,351,351,351,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350,350];

    //add animated warp paths
    for(let i = 0; i < toggledTileList.length; i++)
    {
        setTileTo(toggledTileList[i][0],toggledTileList[i][1],394);
    }


    

    itemMap = [];

    //randomize geodes & establish item map
    for(let i = 0; i < gameMap.length; i++)
    {
        itemMap[i] = 0;
        if(gameMap[i] == 359)
        {
            let r = randomInt(3);
            gameMap[i] = 359+r;
        }
    }
    
    for(let i = 0; i < gameMap.length; i++)
    {
        itemMap[i] = 0;
    }

    //set items
    setItemTo(14,64,350) //moe
    setItemTo(8,3,351) //bulb
    setItemTo(14,99,352) //statue

    for(let i = 0; i < dungeon2SwitchPositions.length; i++)
    {
        setTileTo(dungeon2SwitchPositions[i][0][0],dungeon2SwitchPositions[i][0][1],392);
        setItemTo(dungeon2SwitchPositions[i][1][0],dungeon2SwitchPositions[i][1][1],353);
    }

    // //set gates (items, not tiles)
    // setItemTo(16,82,353);
    // setItemTo(16,83,353);
    // setItemTo(15,83,353);
    // setItemTo(14,83,353);
    // setItemTo(14,82,353);
    // setItemTo(14,81,353);
    // setItemTo(14,80,353);

    // //set switch tiles
    // setTileTo(20,88,392);
    // setTileTo(16,85,392);
    // setTileTo(8,88,392);
    // setTileTo(12,81,392);
    // setTileTo(8,74,392);
    // setTileTo(16,79,392);
    // setTileTo(16,75,392);
    // setTileTo(20,77,392);


    // //set scrolls
    // let scrollCoordinates = [[18,56],[55,42]]
    // for(let i = 0; i < scrollCoordinates.length; i++)
    // { itemMap[toIndex(scrollCoordinates[i][0],scrollCoordinates[i][1])] = 200; }

	// var starting_pos = [14,68]; //for tests
    var starting_pos = [8,138]; //actual start
	player.position[0] = starting_pos[0];
	player.position[1] = starting_pos[1];
	player.placeAt(player.position[0], player.position[1]);
	viewport.update(playerX(),playerY());
    player.moveUp(currentFrameTime);


    //opening sound
    selectSnd('bg-waterfallcave1',-0.8,true);
    selectSnd('bg-waterfallcave2',0.8,true);
    setGain('bg-waterfallcave2',0.4,0)
    selectSnd('bg-forest-waterfallloop1',0.8,true);
    setGain('bg-forest-waterfallloop1',0.1,0)
    selectSnd('bg-forest-waterfallloop2',-0.8,true);
    setGain('bg-forest-waterfallloop2',0.1,0)
    selectSnd('bg-cavedrips',0,true);


    timer = setInterval(() => {
        animationTimer();
    }, 1000);

}

//draw current position on map and trigger events as needed
function drawDungeon2(currentFrameTime, currentSecond, tick)
{
	if(levelBuildTick) { buildDungeon2(currentFrameTime); levelBuildTick = false; }

	//draw current viewport only (for viewport, see movement.js)
	for(var y = viewport.startTile[1]; y <= viewport.endTile[1]; y++)
	{
		for(var x = viewport.startTile[0]; x <= viewport.endTile[0]; x++)
		{
			//draw gameMap
			var tile = tileTypes[gameMap[toIndex(x,y)]];
			ctx.drawImage(tileset, tile.sprite[0].x, tile.sprite[0].y, tile.sprite[0].w, tile.sprite[0].h,
				viewport.offset[0] + (x*tileW), viewport.offset[1] + (y*tileH), tileW, tileH);
			
			//draw items over top
			if (itemMap[toIndex(x,y)] != 0)
			{
				var item = itemTypes[itemMap[toIndex(x,y)]];
				ctx.drawImage(tileset, item.sprite[0].x, item.sprite[0].y, item.sprite[0].w, item.sprite[0].h,
				viewport.offset[0] + (x*tileW), viewport.offset[1] + (y*tileH), item.sprite[0].w, item.sprite[0].h);
			}
		}
	}

    //for tunnel burrowing
	if(dimSurroundings)
        {
            for(var y = viewport.startTile[1]; y <= viewport.endTile[1]; y++)
                {
                    for(var x = viewport.startTile[0]; x <= viewport.endTile[0]; x++)
                    {
                        var tile = tileTypes[gameMap[toIndex(x,y)]];
                        if(!tile.undimmable) {
                            ctx.fillStyle = 'rgba(0,0,0,0.5)';
                            ctx.fillRect(viewport.offset[0] + x*tileW,viewport.offset[1] + y*tileH,tileW,tileH);
                        }
                    }
                }
        }

    itemFlashAnimation(headlightOrange);

	drawCharacter(); //character.js

	//trigger any events if character just stepped on a new tile
	if(tick)
	{

        //sound handling
        if((thisTileIs() >= 354 && thisTileIs() <= 358) || thisTileIs() == 395)
        {
            let thisDungeon2WaterSound = randomInt(5)+1;
            if(thisDungeon2WaterSound == lastDungeon2WaterSound) {
                if(thisDungeon2WaterSound == 6) { thisDungeon2WaterSound = 1; }
                else { thisDungeon2WaterSound++; }

            }
            selectSnd(`cave${thisDungeon2WaterSound}`,0);
            lastDungeon2WaterSound = thisDungeon2WaterSound;
        }


        //item handling

        //MAZE SWITCHES
        // 20,88 > 16,81
        // 16,85 > 16,82
        // 8,88 > 16,83
        // 12,81 > 15,83
        // 8,74 > 14,83
        // 16,79 > 14,82
        // 16,75 > 14,81
        // 20,77 > 14,80
        
        if(thisTileIs() == 392)
        {
            //turn off switch permanently
            setPlayerTile(393);

            //find gate coordinates and turn to 0
            for(let i = 0; i < dungeon2SwitchPositions.length; i++)
            {
                if(playerX() == dungeon2SwitchPositions[i][0][0] && playerY() == dungeon2SwitchPositions[i][0][1]) {
                    setItemTo(dungeon2SwitchPositions[i][1][0],dungeon2SwitchPositions[i][1][1],0);
                }
            }
            
        }

        if(playerX() == 13 && playerY() == 68)
        {
            player.position[0] = 9;
            player.position[1] = 3;
            player.placeAt(player.position[0], player.position[1]);
        }


        if(thisItemIs() == 351) 
        { 
            updateGotItem(['You got the CRUSTY BULB!','Huh... not much of a flower is it?'],351)
            selectSnd('moonglow',0,true);
            // fadeOutBackgroundSnd('bg-dungeon1',3.0);
            gameState.artifacts["CRUSTY BULB"] = true; 
        }

        if(nextToCharacter() == 'moe') { 
            updateDialogue(
            [
                ["MOE:",
                "Well aren't YOU a sight for sore eyes!",
                "I came to this cave a-lookin' for the gorgeous MAGIC BLOOM...",
                "Turned out to be just the sparkle of my imagination.",
                "I threw my findings down this here waterway.",
                "Can't swim though myself. Say... could I get a lift?"]
            ]);
        }
        else { dialogueActive = false; dialoguePage = 0; }

        //bg sound trigger for maze
        if(playerY() == 106) {
            selectSnd('bg-dungeon2loop',0,true);
            setGain('bg-dungeon2loop',0.01,0);
            setGain('bg-dungeon2loop',1.0,20.0);}


        // }
        // if(playerY() == 105 && !bgDungeon2LoopTriggered)
        // {
        //     bgDungeon2LoopTriggered = true;
        // }
        // console.log()
        if(playerY() == 63) {
            for(let i = 0; i < activeSounds.length; i++)
            {
                fadeOutBackgroundSnd(activeSounds[i][0],0.5);
            }
            // clearAllBackgroundSnd(0.0);
            selectSnd('dungeon2melody',0);
        }
         
        //maze exit tunnel changes
        if(playerX() == 14 && playerY() == 80) { setTileTo(14,78,382); }
        else if(playerX() == 14 && playerY() == 81) { setTileTo(14,78,352); }
        if(playerX() == 14 && playerY() == 79) {
            setTileTo(14,70,381);
            setTileTo(14,71,382);
            for(let y = 72; y <= 77; y++)
            {
                setTileTo(14,y,gameMap[toIndex(14,y)]+12);
            }
        }
        if(playerX() == 14 && playerY() == 68) { setTileTo(14,69,383); selectSnd('destruct375',0);}

        //ride sequence tunnel triggers
        if(playerX() == 12 && playerY() == 53) { setTileTo(14,53,384); }
        if(playerX() == 16 && playerY() == 30) { setTileTo(14,30,384); }
        if(playerX() == 10 && playerY() == 32) { setTileTo(10,30,384); }
        if(playerX() == 8 && playerY() == 24) { setTileTo(10,24,384); }
        if(playerX() == 21 && playerY() == 21) { setTileTo(19,21,384); }

        


        // spatialGain('bg-forest-water1',78,26,0.05);
        // spatialGain('bg-forest-water2',78,26,0.05);
        // //spatial sound for crystals (function in snd.js)
        // if(gameState.world2TalkedToOswald)
        // {
        //     for(let i = 0; i < 6; i++)
        //     {
        //         if(playerX() == actualCrystalLocations[i][0] && playerY() == actualCrystalLocations[i][1] &&
        //             thisItemIs() == 312+i)
        //         {
        //             fadeOutBackgroundSnd(`crystal${i+1}melody`,0.25);
        //             selectSnd(`crystal${i+1}drone`,0,true);
        //             if(i == 5) { selectSnd(`crystal${i+2}drone`,0,true); }
        //         }
        //         else { spatialGain(`crystal${i+1}melody`,actualCrystalLocations[i][0],actualCrystalLocations[i][1],0.25); }
        //     }
        // }

        // //special sound for rapids/water
        // if(thisTileIs() == 308)
        // {
        //     selectSnd(`water${waterCycle}`,0);
        //     waterCycle == 0 ? waterCycle = 1 : waterCycle = 0;
        // }
        // if(thisTileIs() >= 310 && thisTileIs() <= 313)
        // {
        //     selectSnd(`rapids${rapidCycle}`,0);
        //     rapidCycle >= 9 ? rapidCycle = 1 : rapidCycle++;
        // }

        // //sign
        // let n = nextToSign();
        // if(n[0] == 78 && n[1] == 2) { updateSign(["THE WATCHTOWER"]);}
        // else { signActive = false; }
       
		if(playerX() == 1 && playerY() == 4)
		{ 
            gameState.turtleTownVisits = 3;
            updateDialogue([[]]);
            selectSnd('warp230',0);
            // clearAllBackgroundSnd(3.0);
            player.sprites[directions.up] = [{x:tileW*0, y:tileH*14, w:tileW, h:tileH}];
            player.sprites[directions.right] = [{x:tileW*1, y:tileH*14, w:tileW, h:tileH}];
            player.sprites[directions.left] = [{x:tileW*2, y:tileH*14, w:tileW, h:tileH}];
            player.sprites[directions.down] = [{x:tileW*3, y:tileH*14, w:tileW, h:tileH}];
            fadeOutBackgroundSnd('moonglow',3.0);
            // clearAllBackgroundSnd(3.0);
			gameState.level = 'turtle-town'; levelBuildTick = true;  
		}
	}
}